<?php

namespace frontend\controllers;

use app\models\Cart;
use backend\models\Article;
use backend\models\ArticleCategory;
use frontend\models\Goods;
use frontend\models\Member;
use frontend\models\Order;
use yii\web\Controller;
use frontend\models\Address;
use frontend\models\GoodCates;
use yii\web\Cookie;
use frontend\models\OrderGoods;

/**
 * Default controller for the `api` module
 */
class ApiController extends Controller
{
    public $token='12313';
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $response=\Yii::$app->response;
        \Yii::$app->request->enableCsrfValidation=false;
        \Yii::$app->response->format=$response::FORMAT_JSON;
    }

    /**
     * Renders the index view for the module
     * @return string
     */
    //用户的登录
    public function actionRegister(){
        $request=\Yii::$app->request;
        $model=new Member();
        $model->scenario=$model::SCENARIO_API;
        $result=[
            'error'=>0,
            'content'=>'',
        ];
        if($model->load($request->post(),'') && $model->validate()){
            $model->save(false);
            $result['content']='SUCCESS';
        }else{
            $result['error']=1;
            $result['content']=$model->getErrors();
        }
        return $result;
    }
    public function actionLogin(){
        $request=\Yii::$app->request;
        $model=new Member();
        $model->scenario=$model::SCENARIO_LOGIN;
        $result=[
            'success'=>0,
            'user_id'=>0,
        ];
        if($model->load($request->post(),'') &&$model->validate()){
            $user=Member::find()->where(['username'=>$model->username])->one();
            $validate=\Yii::$app->security->validatePassword($model->password,$user->password_hash);
            if($validate){
                $result['success']=1;
                $result['user_id']=$user->id;
                $result['userinfo']=[
                    'username'=>$user->username,
                    'email'=>$user->email,
                    'tel'=>$user->tel,
                ];
                \Yii::$app->user->login($user,3600*24);
            }else{
                $result['error']='密码错误';
            }
        }else{
            $result['error']=$model->getErrors();
        }
        return $result;
    }
    public function actionChangePassword(){
        $model=new Member();
        $request=\Yii::$app->request;
        $model->scenario=$model::SCENARIO_CHANGE_PASSWORD;
        $result=[
          'error'=>0,
          'content'=>''
        ];
        if($model->load($request->post(),'') && $model->validate()){
            $user=\Yii::$app->user->identity;
            $user->password_hash=\Yii::$app->security->generatePasswordHash($model->password);
            $user->save();
            \Yii::$app->user->login($user);
            $result['content']='SUCCESS';
        }else{
            $result['error']=1;
            $result['content']=$model->getErrors();
        }
        return $result;
    }
    public function actionGetInfo(){
        $userAuth=\Yii::$app->user;
        $request=\Yii::$app->request;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if($userAuth->isGuest){
            $result['error']=1;
            $result['content']='非法请求';
            return $result;
        }
        $result['content']='SUCCESS';
        $result['user_id']=$userAuth->id;
        $user=$userAuth->identity;
        $result['userinfo']=[
            'username'=>$user->username,
            'email'=>$user->email,
            'tel'=>$user->tel,
        ];
        return $result;
    }
    //地址管理
    public function actionAddAddress(){
        $request=\Yii::$app->request;
        $model=new Address();
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if($model->load($request->post(),'') && $model->validate()){
            $model->save();
            $result['content']='SUCCESS';
        }else{
            $result['error']=1;
            $result['content']=$model->getErrors();
        }
        return $result;
    }
    public function actionEditAddress(){
        $request=\Yii::$app->request;
        $id=$request->post('id',0);
        $model=Address::find()->where(['id'=>$id,'user_id'=>\Yii::$app->user->id])->one();
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if($model && $model->load($request->post(),'') && $model->validate()){
            $model->save();
            $result['content']='SUCCESS';
        }else{
            $result['error']=1;
            $result['content']=$model?$model->getErrors():'非法地址';
        }
        return $result;
    }
    public function actionDelAddress(){
        $request=\Yii::$app->request;
        $id=$request->post('id',0);
        $address=Address::find()->where(['id'=>$id,'user_id'=>\Yii::$app->user->id])->one();
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if(!$address){
            $result['error']=1;
            $result['content']='非法地址';
            return $result;
        }
        $tr1=\Yii::$app->db->beginTransaction();
        try{
            $address->delete();
            $tr1->commit();
            $result['content']='SUCCESS';
        }catch (\Exception $e){
            $tr1->rollBack();
            $result['error']=1;
            $result['content']='FAIL';
        }
        return $result;
    }
    public function actionAddresses(){
        $addresses=Address::find()->where(['user_id'=>\Yii::$app->user->identity->id])->all();
        return ['error'=>0,'content'=>'SUCCESS','address'=>$addresses];
    }
    //商品分类
    public function actionGoodsCategories(){
        $redis=new \Redis();
        $redis->connect('127.0.0.1');
        if($nodes=$redis->get('nodes')){
            return json_decode($nodes);
        }
        $nodes=GoodCates::generateNodes();
        $redis->set('nodes',json_encode($nodes),3600);
        return ['nodes'=>$nodes];
    }
    public function actionGetSons($id){
        $parent=GoodCates::findOne(['id'=>$id]);
        return ['sons'=>$parent->children()->all()];
    }
    public function actionGetParents($id){
        $son=GoodCates::findOne(['id'=>$id]);
        return $son->parents()->all();
    }
    //依据商品分类和品牌获取商品
    public function actionGetGoods(){
        $request=\Yii::$app->request;
        $goods_category_id=$request->get('category',null);
        $brand_id=$request->get('brand',null);
        $goods=Goods::find()->filterWhere(['goods_category_id'=>$goods_category_id,'brand_id'=>$brand_id])->all();
        return ['goods'=>$goods];
    }
    //文章
    public function actionArticleCategories(){
        return ['categories'=>ArticleCategory::find()->where(['status'=>1])->all()];
    }
    public function actionArticles(){
        $request=\Yii::$app->request;
        $id=$request->post('id',0);
        return ['articles'=>Article::findAll(['article_category_id'=>$id])];
    }
    public function actionArticleBelong(){
        $result=[
            'error'=>0,
            'content'=>''
        ];
        $request=\Yii::$app->request;
        $id=$request->post('id',0);
        $article=Article::findOne(['id'=>$id]);
        if(empty($article)){
            $result['error']=1;
            $result['content']='非法文章id';
            return $result;
        }
        $result['content']='SUCCESS';
        $result['category']=$article->getCategory();
        return $result;
    }
    //购物车
    public function actionAddCart(){
        $request=\Yii::$app->request;
        $goods_id=$request->post('goods_id',0);
        $amount=$request->post('amount',0);
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if($goods_id==0 || $amount==0){
            $result['error']=1;
            $result['content']='非法商品添加';
            return $result;
        }
        try{
            Cart::addGoods($goods_id,$amount);
            $result['content']='商品添加成功';
        }
        catch (\Exception $e){
            $result['error']=1;
            $result['content']='非法商品添加';
        }
        return $result;
    }
    public function actionEditCart(){
        $request=\Yii::$app->request;
        $goods_id=$request->post('goods_id',0);
        $amount=$request->post('amount',0);
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if($goods_id==0 || $amount==0){
            $result['error']=1;
            $result['content']='非法商品修改';
            return $result;
        }
        try{
            Cart::editGoods($goods_id,$amount);
            $result['content']='商品修改成功';
        }catch (\Exception $e){
            $result['error']=1;
            $result['content']='非法商品修改';
        }
        return $result;
    }
    public function actionFlush(){
        $userAuth=\Yii::$app->user;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        //如果未登录,清楚cookie
        try{
            if($userAuth->isGuest){
                $cookie=new Cookie([
                    'name'=>'carts',
                    'value'=>'',
                    'expire'=>0
                ]);
                \Yii::$app->response->cookies->add($cookie);
            }else{
                //清楚登录后的数据库表
                Cart::deleteAll(['member_id'=>$userAuth->id]);
            }
            $result['content']='清楚购物车成功';
        }
        catch (\Exception $e){
            $result['content']='清楚购物车失败';
            $result['error']=1;
        }
        return $result;
    }
    public function actionDelCart(){
        $request=\Yii::$app->request;
        $goods_id=$request->post('goods_id',0);
        $result=[
            'error'=>0,
            'content'=>''
        ];
        if($goods_id==0){
            $result['error']=1;
            $result['content']='非法的商品id';
        }
        try{
            Cart::delGoods($goods_id);
            $result['content']='删除商品成功';
        }
        catch (\Exception $e){
            $result['error']=1;
            $result['content']='删除商品失败';
        }
        return $result;
    }
    public function actionGetCarts(){
        return ['carts'=>Cart::getGoods()];
    }
    //订单
    public function actionGetOrders(){
        $request=\Yii::$app->request;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        $orders=Order::find()->where(['member_id'=>\Yii::$app->user->id])->all();
        return ['orders'=>$orders];
    }
    public function actionPayment(){
        $request=\Yii::$app->request;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        $order_id=$request->post('order_id',0);
        try{
            $payment=Order::findOne(['id'=>$order_id,'member_id'=>\Yii::$app->user->id])->payment_name;
            $result['content']=$payment;
        }catch (\Exception $e){
            $result['error']=1;
            $result['content']='查询支付方式失败';
        }
        return $result;
    }
    public function actionDelivery(){
        $request=\Yii::$app->request;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        $order_id=$request->post('order_id',0);
        try{
            $delivery_name=Order::findOne(['id'=>$order_id,'member_id'=>\Yii::$app->user->id])->delivery_name;
            $result['content']=$delivery_name;
        }catch (\Exception $e){
            $result['error']=1;
            $result['content']='查询快递方式失败';
        }
        return $result;
    }
    public function actionEntryOrder(){
        $request=\Yii::$app->request;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        list($goodss,$cookies)=Cart::getGoods();
        $order=new Order();
        $order->member_id=\Yii::$app->user->id;
        //加载收货人,地址
        $order->loadAddress($request->post('address',0));
        //加载送货方式
        $order->loadDelivery($request->post('delivery',0));
        //加载付款方式
        $order->loadPayment($request->post('pay',0));
        $order->create_time=time();
        $order->status=1;
        $order->total=0;
        //开始事物
        $tr=\Yii::$app->db->beginTransaction();
        //先保存,以获取订单的id,总金额可以在写入订单时候更新
        $order->save(false);
        //将商品的详情写入详情表,确认是否可以发货
        try{
            foreach ($goodss as $i=>$goods){
                if($goods->stock<$cookies[$goods->id]){
                    throw new \Exception('库存不足');
                }
                $order_goods=new OrderGoods();
                $order_goods->MySave($order,$goods,$cookies);
                //商品减少库存
                $goods->stock-=$order_goods->amount;
                $goods->save();
                //删除购物车商品
                Cart::delGoods($goods->id);
                $result['content']='订单提交成功';
            }
        }catch (\Exception $e){
            $tr->rollBack();
            $result['error']=1;
            $result['content']='订单提交失败';
        }
        $order->save(false);
        $tr->commit();
        return $result;
    }
    public function actionCancleOrder(){
        $request=\Yii::$app->request;
        $result=[
            'error'=>0,
            'content'=>''
        ];
        $order_id=$request->post('order_id',0);
        try{
            $order=Order::findOne(['id'=>$order_id,'member_id'=>\Yii::$app->user->id,'status'=>1]);
            if(empty($order)){
                throw new \Exception('没有这个订单或者订单已经不能取消');
            }
            $order->status=0;
            $order->save();
            $result['content']='订单取消完成';
        }catch (\Exception $e){
            $result['error']=1;
            $result['content']=$e->getMessage();
        }
        return $result;
    }
}
